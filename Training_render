#################################################################
# File name: Training_rendering.R
# Render training sets to have the same format for easier bg error rate estimation
# Author: Ni Shuai nishuai@yahoo.com
# YuceBio R&D department
# Input: directory of training pileup files, reference sequnce used in the panel, 
# bed file defining coordinates of the panel, output directory (gwd by default)
#################################################################

##load packages
library('Biostrings')

####get input parameters
print('Start computing')
args = commandArgs(trailingOnly=TRUE)
training_dir =NULL; output_dir=NULL
if (length(args)<3) {
  stop("Usage: Rscript Training_rendering.R training_dir ref_seq bed_file output_dir", call.=FALSE)
} else if (length(args)>4) {
  stop("Usage: Rscript Training_rendering.R training_dir ref_seq bed_file output_dir", call.=FALSE)
}

training_dir = args[1]  #Assume the healthy_subjects folder in under the working dir
output_dir= args[4]
if (is.null(output_dir)) output_dir='.'  #Assume the healthy_subjects folder in under the working dir
training=list.files(path=training_dir,pattern="freq$") # list all healthy subject pileup data files; require at least two or more normal samples

###generate a master atgc file (each training may have missing positions)
args=c('D:/wrk/TNER-master/training/', 'D:/wrk/TNER-master/ref_seqs_panel.txt',
       'D:/wrk/TNER-master/Target_v2.call.bed','.')
ref_seq=readDNAStringSet(args[2])
bed_file=read.table(args[3], stringsAsFactors = FALSE)
all_positions=unlist(apply(bed_file,1, function(x) {(as.numeric(x[2])+1):x[3]}))
chr=rep(bed_file$V1, c(bed_file$V3 - bed_file$V2))
aa=toString(ref_seq)
aa=unlist(strsplit(aa,', '))
ref_seq=unlist(strsplit(paste(aa, collapse =''),''))
master_acgt=data.frame(chr=chr, position=all_positions, ref_base=ref_seq)
master_acgt$id=paste(master_acgt$chr, master_acgt$position, sep='_')
saveRDS(master_acgt, 'master_acgt.rds')

####read into each training acgt data and render for missing bases
All_training=list()
for (filename in list.files(training_dir)){
  
  training=read.table(file.path(training_dir, filename), stringsAsFactors = FALSE, header = TRUE)
  training=training[,-dim(training)[2]]
  ###create a unified identifier
  training$id=paste(training$chr,training$n_base, sep='_')
  bb=merge(master_acgt, training, by='id', all=TRUE)
  row.names(bb)=bb$id
  bb=bb[,c(2,3,4,9:12)]
  colnames(bb)=c('chr','position','ref_base','A','C','G','T')
  All_training[[filename]]=bb
}

saveRDS(All_training, 'All_training.rds')
